@model Shop.BLL.Models.ProductDTO

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>  </h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>     </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @*     @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })    *@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.GoodName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoodName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoodName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoodAbout, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.GoodAbout, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoodAbout, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoodComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.GoodComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoodComment, "", new { @class = "text-danger" })
            </div>
        </div>


        @*
                    <div class="form-group">
                          @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>
        *@

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId") <br>
                @*  @Html.HiddenFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } }) *@
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>


        @*
                    <div class="form-group">
                           @Html.LabelFor(model => model.ManufacturerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.ManufacturerId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ManufacturerId, "", new { @class = "text-danger" })
                </div>
            </div>
        *@

        <div class="form-group">
            @Html.LabelFor(model => model.ManufacturerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ManufacturerId")<br>
                @*   @Html.HiddenFor(model => model.ManufacturerName, new { htmlAttributes = new { @class = "form-control" } }) *@
                @Html.ValidationMessageFor(model => model.ManufacturerName, "", new { @class = "text-danger" })
            </div>
        </div>

        @*
                    <div class="form-group">
                       @Html.LabelFor(model => model.UnitId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.UnitId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
                </div>
            </div>
        *@

        <div class="form-group">
            @Html.LabelFor(model => model.UnitName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UnitId") <br>
                @*    @Html.HiddenFor(model => model.UnitName, new { htmlAttributes = new { @class = "form-control" } }) *@
                @Html.ValidationMessageFor(model => model.UnitName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">

                <div class="col-md-10">
                    @Html.Action("ShowPhotoDelete", "Photo", new { id = Model.ProductId }) <br /><br />
                    @Html.ActionLink("Добавить фото", "UploadPhoto", "Photo", new { id = Model.ProductId }, new { @class = "btn-sm btn-info" })
                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Список", "IndexHtmlAction", null, new { @class = "btn-sm btn-primary" })
</div>


@section ScriptsDelete{
    <script type="text/javascript">

        $(function () {
        //    $(".delItem").click(function (e) {
            $('body').on('click', '.delItem', function (e) {
                e.preventDefault()
                if (confirm('Do you want to delete this Photo?')) {
                    $.ajax({
                        url: "@Url.Action("Delete", "Photo")",
                        data: { id: $(this).attr('data-id') },
                        type: 'POST',
                        success: function (data) {
                            if (data == "OK")
                                window.location.href = "@Url.Action("Edit", "Product", new { id = Model.ProductId })"
                            else
                                alert("Error!!")
                        },
                        error: function (data) {
                            alert(data);
                        }
                    });
                }
            });
        });

    </script>
}
